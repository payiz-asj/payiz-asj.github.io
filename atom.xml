<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夜莺悠吟</title>
  <icon>https://www.yeying.tech/favicon.ico</icon>
  <subtitle>yyyy你❤</subtitle>
  <link href="https://www.yeying.tech/atom.xml" rel="self"/>
  
  <link href="https://www.yeying.tech/"/>
  <updated>2021-07-28T09:42:28.620Z</updated>
  <id>https://www.yeying.tech/</id>
  
  <author>
    <name>PAYIZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>足协杯小组赛第一场</title>
    <link href="https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-04-06/"/>
    <id>https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-04-06/</id>
    <published>2021-04-06T08:18:23.000Z</published>
    <updated>2021-07-28T09:42:28.620Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 align = &quot;center&quot;&gt;足协杯小组赛第一场&lt;/h1&gt;
&lt;h3 align = &quot;center&quot;&gt;地海 3:1 政管&lt;/h3&gt;

&lt;h3 id=&quot;本学期第一场硬仗，狭路相逢勇者胜，赢得痛快！&quot;&gt;&lt;a href=&quot;#本学期第一场硬仗，狭路相逢勇者胜，赢得痛快！&quot;</summary>
        
      
    
    
    
    <category term="相册" scheme="https://www.yeying.tech/categories/%E7%9B%B8%E5%86%8C/"/>
    
    
    <category term="足球比赛" scheme="https://www.yeying.tech/tags/%E8%B6%B3%E7%90%83%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>足协杯1/4决赛</title>
    <link href="https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-06-03/"/>
    <id>https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-06-03/</id>
    <published>2021-06-04T08:14:56.000Z</published>
    <updated>2021-07-28T09:41:57.870Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 align = &quot;center&quot;&gt;足协杯1/4决赛&lt;/h1&gt;
&lt;h3 align = &quot;center&quot;&gt;电子6:7地海&lt;/h3&gt;





&lt;p&gt;遇到了本学期第一场点球大战，好在赛前一天大家练过，没得问题！&lt;/p&gt;
&lt;h2 id=&quot;首发阵容&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="相册" scheme="https://www.yeying.tech/categories/%E7%9B%B8%E5%86%8C/"/>
    
    
    <category term="足球比赛" scheme="https://www.yeying.tech/tags/%E8%B6%B3%E7%90%83%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>足协杯半决赛</title>
    <link href="https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-06-06/"/>
    <id>https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-06-06/</id>
    <published>2021-06-07T07:51:03.000Z</published>
    <updated>2021-07-28T09:40:56.533Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 align = &quot;center&quot;&gt;闯入半决赛&lt;/h1&gt;
&lt;h3 align = &quot;center&quot;&gt;地海 2:1 环境</summary>
        
      
    
    
    
    <category term="相册" scheme="https://www.yeying.tech/categories/%E7%9B%B8%E5%86%8C/"/>
    
    
    <category term="足球比赛" scheme="https://www.yeying.tech/tags/%E8%B6%B3%E7%90%83%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>足协杯决赛</title>
    <link href="https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-06-12/"/>
    <id>https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-06-12/</id>
    <published>2021-06-13T08:36:45.000Z</published>
    <updated>2021-07-28T09:39:42.799Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 align = &quot;center&quot;&gt;夺冠啦&lt;/h1&gt;
&lt;h3 align = &quot;center&quot;&gt;地海 7:6 政管</summary>
        
      
    
    
    
    <category term="相册" scheme="https://www.yeying.tech/categories/%E7%9B%B8%E5%86%8C/"/>
    
    
    <category term="足球比赛" scheme="https://www.yeying.tech/tags/%E8%B6%B3%E7%90%83%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>Git 学习笔记</title>
    <link href="https://www.yeying.tech/%E7%AC%94%E8%AE%B0/git-learning/"/>
    <id>https://www.yeying.tech/%E7%AC%94%E8%AE%B0/git-learning/</id>
    <published>2019-04-06T09:29:41.000Z</published>
    <updated>2021-07-28T09:32:14.020Z</updated>
    
    
    <summary type="html">&lt;h1 align = &quot;center&quot;&gt;Git 学习笔记&lt;/h1&gt;
记录 Git 的一些常用指令与问题解决方案。

&lt;p&gt;更加具体的内容请看以下仓库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/payiz-asj/git-tips&quot;&gt;Git 的奇技淫巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/payiz-asj/HelloGitHub&quot;&gt;GitHub 上有趣、入门级的开源项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.yeying.tech/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="github" scheme="https://www.yeying.tech/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>adb命令详解</title>
    <link href="https://www.yeying.tech/%E7%AC%94%E8%AE%B0/adb-keys/"/>
    <id>https://www.yeying.tech/%E7%AC%94%E8%AE%B0/adb-keys/</id>
    <published>2019-04-16T07:30:07.000Z</published>
    <updated>2021-07-28T09:31:52.638Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;ADB-操作命令详解及用法大全&quot;&gt;&lt;a href=&quot;#ADB-操作命令详解及用法大全&quot; class=&quot;headerlink&quot; title=&quot;ADB 操作命令详解及用法大全&quot;&gt;&lt;/a&gt;ADB 操作命令详解及用法大全&lt;/h1&gt;&lt;h2 id=&quot;一、ADB是什么？&quot;&gt;&lt;a href=&quot;#一、ADB是什么？&quot; class=&quot;headerlink&quot; title=&quot;一、ADB是什么？&quot;&gt;&lt;/a&gt;一、ADB是什么？&lt;/h2&gt;&lt;p&gt;ADB，即 &lt;a href=&quot;https://developer.android.com/studio/command-line/adb.html&quot;&gt;Android Debug Bridge&lt;/a&gt; 是一种允许模拟器或已连接的 Android 设备进行通信的命令行工具，它可为各种设备操作提供便利，如安装和调试应用，并提供对 &lt;code&gt;Unix shell&lt;/code&gt;（可用来在模拟器或连接的设备上运行各种命令）的访问。可以在&lt;code&gt;Android SDK/platform-tools&lt;/code&gt;中找到 &lt;code&gt;adb&lt;/code&gt; 工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注： 有部分命令的支持情况可能与 Android 系统版本及定制 ROM 的实现有关。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.yeying.tech/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="使用手册" scheme="https://www.yeying.tech/tags/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-11</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-11/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-11/</id>
    <published>2019-05-28T07:29:21.000Z</published>
    <updated>2021-07-28T09:30:25.069Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;对Bug起争议时的处理&quot;&gt;&lt;a href=&quot;#对Bug起争议时的处理&quot; class=&quot;headerlink&quot; title=&quot;对Bug起争议时的处理&quot;&gt;&lt;/a&gt;对Bug起争议时的处理&lt;/h1&gt;&lt;p&gt;测试人员和开发人员因Bug起争议的事情常有发生，例如开发人员认为这不算是一个Bug，或认为这个Bug不重要，不需要修改，而测试人员认为这是一个很严重的Bug，需要开发人员修改，或因其他原因起了争议等。如果出现了这些情况，测试人员应如何处理呢？&lt;/p&gt;
&lt;p&gt;(1）任何争议都需要“对事不对人”，不能因为Bug而激化了双方的矛盾。&lt;/p&gt;
&lt;p&gt;（2）有很多初级软件测试人员提交的Bug单流转到开发人员那里后，开发人员看不懂。原因在于测试人员提交的Bug单没有描述清楚，这是一个非常常见的现象。测试人员提交的Bug单一定要描述清楚，并需要有充足的依据和理由。&lt;/p&gt;
&lt;p&gt;（3）如果Bug单写清楚了，但开发人员还是不愿意修改的话，可以找一个合适的时间，心平气和地与开发人员沟通，说明此Bug对产品质量可能产生的不良影响，测试人员在沟通过程中不能意气用事。&lt;/p&gt;
&lt;p&gt;（4）经沟通后，如果开发人员还是不愿意修改的话（当然开发人员不修改也有他们的原因），那么此时可以向测试经理汇报这一情况，由测试经理出面解决，或是由测试经理召开Bug评审大会（开发人员、测试人员、产品经理三方人员参与，有时也包括项目经理），共同定夺。&lt;/p&gt;
&lt;p&gt;（5）有些初级软件测试人员把Bug提交到开发人员那后，经过开发人员的各种解释，就会同意开发人员的意见，也认为这确实不是一个Bug，从而忽略这个问题，这也是经常发生在初级软件测试人员身上的事情。这就要求测试人员提交Bug的过程要有原则性，这也是作为一名合格的测试人员最重要的特征之一，对待问题需要坚持原则。&lt;/p&gt;
&lt;p&gt;（6）测试人员应和开发人员面对面或通过电子邮件、电话等方式保持密切沟通，共同协商和处理Bug，以减少两者间的隔膜，增加测试人员与开发人员之间的信任和了解。直接沟通也应贯穿到产品开发、测试的每个环节当中。&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-10</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-10/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-10/</id>
    <published>2019-05-28T07:12:21.000Z</published>
    <updated>2021-07-28T09:29:46.611Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;如何记录一个Bug&quot;&gt;&lt;a href=&quot;#如何记录一个Bug&quot; class=&quot;headerlink&quot; title=&quot;如何记录一个Bug&quot;&gt;&lt;/a&gt;如何记录一个Bug&lt;/h1&gt;&lt;p&gt;当测试人员在执行测试用例的过程中发现Bug时，测试人员应该如何记录这个Bug？如何确保开发人员能理解自己所提交的Bug？本节将详细解答这些问题。&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-9</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-9/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-9/</id>
    <published>2019-05-28T06:49:21.000Z</published>
    <updated>2021-07-28T09:29:01.039Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;测试用例的评审&quot;&gt;&lt;a href=&quot;#测试用例的评审&quot; class=&quot;headerlink&quot; title=&quot;测试用例的评审&quot;&gt;&lt;/a&gt;测试用例的评审&lt;/h1&gt;&lt;p&gt;测试人员依据需求文档将测试用例设计完成后，如何确保设计的测试用例是正确无误的呢？这里有一个很重要的任务就是进行用例评审，通过对测试用例的评审以确保用例是&lt;strong&gt;全面的、正确的、没有冗余的。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-8</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-8/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-8/</id>
    <published>2019-05-28T06:39:21.000Z</published>
    <updated>2021-07-28T09:28:51.539Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;用例设计的基本思路&quot;&gt;&lt;a href=&quot;#用例设计的基本思路&quot; class=&quot;headerlink&quot; title=&quot;用例设计的基本思路&quot;&gt;&lt;/a&gt;用例设计的基本思路&lt;/h1&gt;&lt;p&gt;用例设计的基本思路在实际工作中，稍微大型一点的软件系统一般都包括用户注册、登录、搜索以及附件上传等常见模块。本节就以这些模块为例，结合已介绍过的用例设计方法来分别讲解这些模块的设计思路。&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-7</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-7/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-7/</id>
    <published>2019-05-28T06:33:21.000Z</published>
    <updated>2021-07-28T09:28:40.421Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;测试用例的设计&quot;&gt;&lt;a href=&quot;#测试用例的设计&quot; class=&quot;headerlink&quot; title=&quot;测试用例的设计&quot;&gt;&lt;/a&gt;测试用例的设计&lt;/h1&gt;&lt;p&gt;什么是测试用例呢？测试用例对测试工作会起到怎样的作用呢？测试用例与需求文档之间存在什么样的关系呢？&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-6</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-6/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-6/</id>
    <published>2019-05-28T06:24:21.000Z</published>
    <updated>2021-07-28T09:28:28.462Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;软件测试方法&quot;&gt;&lt;a href=&quot;#软件测试方法&quot; class=&quot;headerlink&quot; title=&quot;软件测试方法&quot;&gt;&lt;/a&gt;软件测试方法&lt;/h1&gt;&lt;p&gt;主要介绍软件测试的方法，包括白盒测试、灰盒测试、黑盒测试、静态测试、动态测试、手动测试、自动测试以及用例设计方法等。&lt;/p&gt;
&lt;h1 id=&quot;测试方法划分&quot;&gt;&lt;a href=&quot;#测试方法划分&quot; class=&quot;headerlink&quot; title=&quot;测试方法划分&quot;&gt;&lt;/a&gt;测试方法划分&lt;/h1&gt;&lt;p&gt;测试方法一般按以下几种划分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;按照执行阶段划分为：白盒测试、黑盒测试、灰盒测试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按照执行状态划分为：静态测试、动态测试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按照执行行为划分为：手动测试、自动测试。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-5</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-5/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-5/</id>
    <published>2019-05-28T06:21:21.000Z</published>
    <updated>2021-07-28T09:28:20.150Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;软件测试的流程&quot;&gt;&lt;a href=&quot;#软件测试的流程&quot; class=&quot;headerlink&quot; title=&quot;软件测试的流程&quot;&gt;&lt;/a&gt;软件测试的流程&lt;/h1&gt;&lt;p&gt;软件测试的流程大致分为测试计划与控制、测试分析与设计、测试实现与执行、测试评估与报告和测试结束活动。在实际工作中，大多企业把测试工作分为五个阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;测试计划阶段、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试设计阶段、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试实现阶段、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试执行阶段、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试总结。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在熟悉流程前，我们首先看一下，测试组织中的角色与职责。&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-4</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-4/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-4/</id>
    <published>2019-05-28T06:19:21.000Z</published>
    <updated>2021-07-28T09:28:08.379Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;项目成员，项目需求评审&quot;&gt;&lt;a href=&quot;#项目成员，项目需求评审&quot; class=&quot;headerlink&quot; title=&quot;项目成员，项目需求评审&quot;&gt;&lt;/a&gt;项目成员，项目需求评审&lt;/h1&gt;&lt;h1 id=&quot;基本组成&quot;&gt;&lt;a href=&quot;#基本组成&quot; class=&quot;headerlink&quot; title=&quot;基本组成&quot;&gt;&lt;/a&gt;基本组成&lt;/h1&gt;&lt;p&gt;先了解一下软件项目中所涉及到的一些重要角色和关键词，分别是 项目，项目经理，需求，用户，开发人员，测试人员和产品人员。&lt;/p&gt;
&lt;p&gt;项目： 代表软件研发的项目，包括了从前期项目预研，立项，组建项目团队，设计开发软件，测试调试，交付验收，以及软件运营等各项具体的工作。&lt;/p&gt;
&lt;p&gt;项目经理：软件项目的总负责人。项目经理既需要广泛的计算机知识，又需要项目管理技能，能够对项目的成本，人力，进度，质量，风向，安全等进行准确的分析和管理。从而使项目按照计划顺利完成。&lt;/p&gt;
&lt;p&gt;需求: 用户需求，有了需求，才有项目，开发人员根据需求开发对应的产品。&lt;/p&gt;
&lt;p&gt;用户：这里一般指的是提出需求的用户，同时软件验收的主要人员。&lt;/p&gt;
&lt;p&gt;开发人员： 软件项目组中负责研发的技术人员。&lt;/p&gt;
&lt;p&gt;测试人员：软件项目组中负责测试的人员。&lt;/p&gt;
&lt;p&gt;产品人员：负责产品的设计，需求分析整理等工作。&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-3</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-3/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-3/</id>
    <published>2019-05-28T06:16:21.000Z</published>
    <updated>2021-07-28T09:27:55.882Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;如何测试矿泉水瓶&quot;&gt;&lt;a href=&quot;#如何测试矿泉水瓶&quot; class=&quot;headerlink&quot; title=&quot;如何测试矿泉水瓶&quot;&gt;&lt;/a&gt;如何测试矿泉水瓶&lt;/h1&gt;&lt;p&gt;一个刚生产出来的矿泉水瓶要不要进行测试（检验）？答案是肯定的，当然要进行测试。只有通过测试，才能批量生产。如果产品生产出来后不进行测试，直接交给用户使用，在用户使用时出现了问题，那势必会给用户和企业带来不良的影响，甚至是严重的后果。那么测试人员该如何针对矿泉水瓶进行测试呢？&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-2</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-2/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-2/</id>
    <published>2019-05-28T06:14:21.000Z</published>
    <updated>2021-07-28T09:27:42.504Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;软件测试阶段划分&quot;&gt;&lt;a href=&quot;#软件测试阶段划分&quot; class=&quot;headerlink&quot; title=&quot;软件测试阶段划分&quot;&gt;&lt;/a&gt;软件测试阶段划分&lt;/h1&gt;&lt;h2 id=&quot;单元测试&quot;&gt;&lt;a href=&quot;#单元测试&quot; class=&quot;headerlink&quot; title=&quot;单元测试&quot;&gt;&lt;/a&gt;单元测试&lt;/h2&gt;&lt;p&gt;单元测试（Unit Testing，简称UT）是对软件基本组成单元（函数或类）进行检测的测试工作。其目的是检测与详细设计说明书（Low Level Design，简称LLD）的符合程度。&lt;/p&gt;
&lt;h2 id=&quot;集成测试&quot;&gt;&lt;a href=&quot;#集成测试&quot; class=&quot;headerlink&quot; title=&quot;集成测试&quot;&gt;&lt;/a&gt;集成测试&lt;/h2&gt;&lt;p&gt;集成测试（Integration Testing，简称IT）是在单元测试的基础上，将所有的模块按照设计的要求进行集成，主要验证组装后的功能以及模块之间的接口是否正确安装的测试工作。主要目的是检测软件与概要设计说明书（High Level Design，简称HLD）的符合程度。集成测试的主要工作是测试模块之间的接口，但是接口测试不等于集成测试，这是个以面盖点的问题。比如，可以说北京是中国的城市，但不能说中国的城市就是北京。&lt;/p&gt;
&lt;h2 id=&quot;集成测试工具&quot;&gt;&lt;a href=&quot;#集成测试工具&quot; class=&quot;headerlink&quot; title=&quot;集成测试工具&quot;&gt;&lt;/a&gt;集成测试工具&lt;/h2&gt;&lt;p&gt;能够直接用于集成测试的测试工具不是很多，一般来说，一些通用的商用测试工具由于需要满足一定的通用性，因此在实际使用的时候功能是有限的，大部分工具需要进行二次开发。集成测试主要关注接口的测试，常用的接口测试工具：POSTMan、HTTPRequest、jmeter等。&lt;/p&gt;
&lt;h2 id=&quot;系统测试&quot;&gt;&lt;a href=&quot;#系统测试&quot; class=&quot;headerlink&quot; title=&quot;系统测试&quot;&gt;&lt;/a&gt;系统测试&lt;/h2&gt;&lt;p&gt;系统测试（System Testing，简称ST）是将已经通过集成测试的软件系统，与计算机硬件、外设、数据库、网络等其他元素结合在一起，在实际运行环境下，进行的一系列的测试工作。&lt;/p&gt;
&lt;p&gt;系统测试通常是由独立的测试团队来完成，其测试的主要依据是需求规格说明书。&lt;/p&gt;
&lt;p&gt;系统测试的类型主要有：&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>软件测试-1</title>
    <link href="https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-1/"/>
    <id>https://www.yeying.tech/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/software-testing-1/</id>
    <published>2019-05-28T06:12:21.000Z</published>
    <updated>2021-07-28T09:27:15.084Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;软件测试基础理论&quot;&gt;&lt;a href=&quot;#软件测试基础理论&quot; class=&quot;headerlink&quot; title=&quot;软件测试基础理论&quot;&gt;&lt;/a&gt;&lt;strong&gt;软件测试基础理论&lt;/strong&gt;&lt;/h1&gt;&lt;h1 id=&quot;软件概念&quot;&gt;&lt;a href=&quot;#软件概念&quot; class=&quot;headerlink&quot; title=&quot;软件概念&quot;&gt;&lt;/a&gt;软件概念&lt;/h1&gt;&lt;p&gt;软件（Software）是一系列按照特定顺序组织的计算机数据和指令的集合。一般来讲，软件被划分为系统软件、应用软件和介于这两者之间的中间件。在国标中对软件的定义是与计算机系统操作有关的计算机程序、规程、规则以及可能有的文件、文档及数据等。&lt;/p&gt;
&lt;h1 id=&quot;软件生命周期&quot;&gt;&lt;a href=&quot;#软件生命周期&quot; class=&quot;headerlink&quot; title=&quot;软件生命周期&quot;&gt;&lt;/a&gt;软件生命周期&lt;/h1&gt;&lt;p&gt;生命周期（Life Cycle）的概念应用很广泛，简单说就是指一个对象的“生老病死”。对一个软件产品或软件系统而言也需要经历同样阶段，一般称为软件生命周期。软件生命周期大致分为六个阶段。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/6100fd355132923bf846d6ea.jpg&quot; alt=&quot;软件生命周期&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="软件测试" scheme="https://www.yeying.tech/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试基础" scheme="https://www.yeying.tech/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>足协杯夺冠照片</title>
    <link href="https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-06-15/"/>
    <id>https://www.yeying.tech/%E7%9B%B8%E5%86%8C/football-match-06-15/</id>
    <published>2021-06-15T08:37:35.000Z</published>
    <updated>2021-07-28T08:46:57.021Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 align = &quot;center&quot;&gt;足协杯夺冠照片&lt;/h1&gt;


&lt;img align =&quot;center&quot; src = &quot;https://pic.imgdb.cn/item/610118a75132923bf8b719e9.jpg&quot;  style =</summary>
        
      
    
    
    
    <category term="相册" scheme="https://www.yeying.tech/categories/%E7%9B%B8%E5%86%8C/"/>
    
    
    <category term="足球比赛" scheme="https://www.yeying.tech/tags/%E8%B6%B3%E7%90%83%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio 快捷键</title>
    <link href="https://www.yeying.tech/%E7%AC%94%E8%AE%B0/vs-keys/"/>
    <id>https://www.yeying.tech/%E7%AC%94%E8%AE%B0/vs-keys/</id>
    <published>2019-04-10T09:52:55.000Z</published>
    <updated>2021-07-27T15:50:35.272Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 align = &quot;center&quot;&gt;Visual Studio 快捷键&lt;/h1&gt;
| 功能       | 快捷键               |
| ---------- | -------------------- |
| 注释       | Ctrl + K </summary>
        
      
    
    
    
    <category term="笔记" scheme="https://www.yeying.tech/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="快捷键" scheme="https://www.yeying.tech/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
    <category term="Visual Studio" scheme="https://www.yeying.tech/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>建立博客心路历程</title>
    <link href="https://www.yeying.tech/%E5%8D%9A%E4%B8%BB%E5%AF%84%E8%AF%AD/blog-creation-process/"/>
    <id>https://www.yeying.tech/%E5%8D%9A%E4%B8%BB%E5%AF%84%E8%AF%AD/blog-creation-process/</id>
    <published>2019-03-27T03:22:49.000Z</published>
    <updated>2021-07-27T10:20:49.565Z</updated>
    
    
    <summary type="html">&lt;h1 align=&quot;center&quot;&gt;建立博客心路历程&lt;/h1&gt;
​        还记得大一时就有老师告诉我们：“大家可以尝试在网上写博客、文章，好让自己记录下学习的点点滴滴，也可以跟他人交流经验，那将是件非常不错的事情。”

&lt;p&gt;​        我大一就做了微信个人公众号，但是可惜啊，就写了一两片文章就没能坚持。后来在CSDN和博客园、知乎、简书等零零散散写了一些文章也没后文。&lt;/p&gt;
&lt;p&gt;​        到现在终于下决心做个博客，花了3天3夜时间几乎没休息，啃完了HTML+CSS+JS大概用法，并且使用Gitpages+hexo成功搭建了这个免费的个人博客，说实话用Github这么长时间了了，现才才知道这个好东西，真是有点惭愧啊！&lt;/p&gt;
&lt;p&gt;​        &lt;strong&gt;下面写一下我建立此博客的过程和心得吧，希望大家能够从中受益！&lt;/strong&gt;👉&lt;/p&gt;</summary>
    
    
    
    <category term="博主寄语" scheme="https://www.yeying.tech/categories/%E5%8D%9A%E4%B8%BB%E5%AF%84%E8%AF%AD/"/>
    
    
    <category term="欢迎" scheme="https://www.yeying.tech/tags/%E6%AC%A2%E8%BF%8E/"/>
    
  </entry>
  
</feed>
